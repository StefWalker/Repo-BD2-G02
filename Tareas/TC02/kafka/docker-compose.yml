version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - kafka_network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-broker-1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE  
    ports:
    - "9092:9092"  
    - "9093:9093"
    depends_on:
      - zookeeper
    networks:
      - kafka_network

  mongo:
    container_name: MongoDB
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    networks:
      - kafka_network
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"
    networks:
      - kafka_network
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/

  api:
    build:
      context: .  
    networks:
      - kafka_network
    ports:
      - "5000:5000"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: "kafka-broker:9092"
      MONGO_URI: "mongodb://root:example@mongo:27017"
    depends_on:
      - kafka
      - mongo

  kafka-consumer:
    build:
      context: ./consumer  # Ruta al Dockerfile del consumidor
    networks:
      - kafka_network
    environment:
      KAFKA_BOOTSTRAP_SERVERS: "kafka-broker:9092"
      MONGO_URI: "mongodb://root:example@mongo:27017"
    depends_on:
      - kafka
      - mongo
    stdin_open: true
    tty: true
    command: ["python3", "consumer.py"]      

networks:
  kafka_network:
    driver: bridge
