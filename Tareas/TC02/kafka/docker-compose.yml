version: '3.8'

services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.9
    container_name: zookeeper
    networks:
      - kafka_kafka_network
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - "zookeeper_data:/bitnami"

  kafka:
    image: docker.io/bitnami/kafka:3.4
    container_name: Kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
    depends_on:
      - zookeeper
    networks:
      - kafka_kafka_network
    volumes:
      - "kafka_data:/bitnami"

  mongo:
    container_name: MongoDB
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    networks:
      - kafka_kafka_network
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"
    networks:
      - kafka_kafka_network
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@MongoDB:27017

  kafka-consumer:
    build:
      context: .
    container_name: kafkaCP
    networks:
      - kafka_kafka_network
    depends_on:
      - kafka

networks:
  kafka_kafka_network:
    driver: bridge

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local